import{readFile as b}from"@vercel/edge-config-fs";var w="@vercel/edge-config",y="0.2.1";var a={UNEXPECTED:"@vercel/edge-config: Unexpected error",UNAUTHORIZED:"@vercel/edge-config: Unauthorized",NETWORK:"@vercel/edge-config: Network error",EDGE_CONFIG_NOT_FOUND:"@vercel/edge-config: Edge Config not found"};function C(e,n){return Object.prototype.hasOwnProperty.call(e,n)}function P(e,n){let i={};return n.forEach(o=>{i[o]=e[o]}),i}function p(e){if(typeof e!="string")throw new Error("@vercel/edge-config: Expected key to be a string")}function v(e){if(!Array.isArray(e)||e.some(n=>typeof n!="string"))throw new Error("@vercel/edge-config: Expected keys to be an array of string")}function l(e){return typeof structuredClone=="function"?structuredClone(e):e===void 0?e:JSON.parse(JSON.stringify(e))}function k(e){try{let n=new URL(e);if(n.host!=="edge-config.vercel.com"||n.protocol!=="https:"||!n.pathname.startsWith("/ecfg"))return null;let i=n.pathname.split("/")[1];if(!i)return null;let o=n.searchParams.get("token");return!o||o===""?null:{id:i,token:o}}catch{return null}}var u=e=>e instanceof Error&&C(e,"digest")&&e.digest==="DYNAMIC_SERVER_USAGE";var R=new Map;async function h(e,n={}){let{headers:i=new Headers,...o}=n,d=i.get("Authorization"),r=`${e},${d||""}`,s=R.get(r);if(s){let{etag:U,response:D}=s,N=new Headers(i);N.set("If-None-Match",U);let g=await fetch(e,{...o,headers:N});if(g.status===304)return g.cachedResponseBody=JSON.parse(D),g;let x=g.headers.get("ETag");return g.ok&&x&&R.set(r,{etag:x,response:await g.clone().text()}),g}let t=await fetch(e,n),c=t.headers.get("ETag");return t.ok&&c&&R.set(r,{etag:c,response:await t.clone().text()}),t}async function E(e){if(e.type!=="vercel"||!process.env.AWS_LAMBDA_FUNCTION_NAME)return null;try{let n=await b(`/opt/edge-config/${e.id}.json`,"utf-8");return JSON.parse(n)}catch{return null}}async function T(e){typeof EdgeRuntime=="undefined"&&await e.arrayBuffer()}function A(e){let n=e.startsWith("https://edge-config.vercel.com/"),i=n?k(e):null;if(n&&i)return{type:"vercel",baseUrl:`https://edge-config.vercel.com/${i.id}`,id:i.id,version:"1",token:i.token};try{let o=new URL(e),d=o.searchParams.get("id"),r=o.searchParams.get("token"),s=o.searchParams.get("version")||"1";(!d||o.pathname.startsWith("/ecfg_"))&&(d=o.pathname.split("/")[1]||null);for(let t of o.searchParams.keys())o.searchParams.delete(t);return!d||!r?null:{type:"external",baseUrl:o.toString(),id:d,token:r,version:s}}catch{return null}}function j(e){if(!e)throw new Error("@vercel/edge-config: No connection string provided");let n=A(e);if(!n)throw new Error("@vercel/edge-config: Invalid connection string provided");let i=n.baseUrl,o=n.version,d={Authorization:`Bearer ${n.token}`};return typeof process!="undefined"&&process.env.VERCEL_ENV&&(d["x-edge-config-vercel-env"]=process.env.VERCEL_ENV),typeof w=="string"&&typeof y=="string"&&(d["x-edge-config-sdk"]=`${w}@${y}`),{async get(r){let s=await E(n);return s?(p(r),Promise.resolve(l(s.items[r]))):(p(r),h(`${i}/item/${r}?version=${o}`,{headers:new Headers(d),cache:"no-store"}).then(async t=>{if(t.ok)return t.json();if(await T(t),t.status===401)throw new Error(a.UNAUTHORIZED);if(t.status===404){if(t.headers.has("x-edge-config-digest"))return;throw new Error(a.EDGE_CONFIG_NOT_FOUND)}if(t.cachedResponseBody!==void 0)return t.cachedResponseBody;throw new Error(a.UNEXPECTED)},t=>{throw u(t)?t:new Error(a.NETWORK)}))},async has(r){let s=await E(n);return s?(p(r),Promise.resolve(C(s.items,r))):(p(r),fetch(`${i}/item/${r}?version=${o}`,{method:"HEAD",headers:new Headers(d),cache:"no-store"}).then(t=>{if(t.status===401)throw new Error(a.UNAUTHORIZED);if(t.status===404){if(t.headers.has("x-edge-config-digest"))return!1;throw new Error(a.EDGE_CONFIG_NOT_FOUND)}if(t.ok)return!0;throw new Error(a.UNEXPECTED)},t=>{throw u(t)?t:new Error(a.NETWORK)}))},async getAll(r){let s=await E(n);if(s)return r===void 0?Promise.resolve(l(s.items)):(v(r),Promise.resolve(l(P(s.items,r))));Array.isArray(r)&&v(r);let t=Array.isArray(r)?new URLSearchParams(r.map(c=>["key",c])).toString():null;return t===""?Promise.resolve({}):h(`${i}/items?version=${o}${t===null?"":`&${t}`}`,{headers:new Headers(d),cache:"no-store"}).then(async c=>{if(c.ok)return c.json();if(await T(c),c.status===401)throw new Error(a.UNAUTHORIZED);if(c.status===404)throw new Error(a.EDGE_CONFIG_NOT_FOUND);if(c.cachedResponseBody!==void 0)return c.cachedResponseBody;throw new Error(a.UNEXPECTED)},c=>{throw u(c)?c:new Error(a.NETWORK)})},async digest(){let r=await E(n);return r?Promise.resolve(r.digest):h(`${i}/digest?version=${o}`,{headers:new Headers(d),cache:"no-store"}).then(async s=>{if(s.ok)return s.json();if(await T(s),s.cachedResponseBody!==void 0)return s.cachedResponseBody;throw new Error(a.UNEXPECTED)},s=>{throw u(s)?s:new Error(a.NETWORK)})}}}var f;function m(){f||(f=j(process.env.EDGE_CONFIG))}var W=(...e)=>(m(),f.get(...e)),B=(...e)=>(m(),f.getAll(...e)),G=(...e)=>(m(),f.has(...e)),V=(...e)=>(m(),f.digest(...e));export{j as createClient,V as digest,W as get,B as getAll,G as has,k as parseConnectionString};
